import IConditionReport from "./IConditionReport";
import IGaugeLocation from "./IGaugeLocation";
import IOffer from "./IOffer";
import IUser from "./IUser";
import { IVehicle } from "./IVehicle";

export default interface IOpportunity {
  echopark_offers: object[];
  light: string[];
  tags: string[];
  listed_date: Date;
  listing_url: string;
  name: string;
  consumer_id: string;
  contact_info_id: string;
  intent_cd: string;
  created_by_cd: string;
  in_market: boolean;
  asking_price: number;
  status_cd: string;
  on_lot: boolean;
  made_inspection_offer: boolean;
  fast_track: boolean;
  vehicle_id: IVehicle;
  image: string;
  _keywords: string[];
  gauge_location_id: IGaugeLocation;
  lead_stage: string;
  lender: string;
  market_reports: string;
  notes: string;
  ownership_cd: string;
  received_payment: boolean;
  title_delivered: boolean;
  mmr: number;
  assigned_date: Date;
  gauge_rep_id: string | IUser;
  negotiability_cd: string;
  inspector_id: string;
  completed_deliveries_count: number;
  completed_inspections_count: number;
  completed_pickups_count: number;
  condition_reports: IConditionReport[];
  auction_end: Date;
  auction_ids: string[];
  auction_start: Date;
  inspection_completed: Date;
  success_rep_id: string;
  book_ids: any[];
  main_image: string;
  offers: IOffer[];
  auction?: {
    _id: string;
    opportunity_ids: string[];
    start_date: Date;
    end_date: Date;
    status_cd: string;
    created_at: Date;
    updated_at: Date;
  };
  access_key: string;
  inventory: boolean;
  counter_offer: number;
}
